*, *::before, *::after {
 padding: 0;
 margin: 0 auto;
 box-sizing: border-box;
}


body {
 background-color: #000; 
 color: #fff;
 min-height: 100vh;
 display: grid;
 place-items: center;
 perspective: 800px;
 overflow: clip;
 cursor: url('heart.png'), auto;


 * {
 transform-style: preserve-3d;
 }
}


.scene {
 --duration: 30s; 
 --duration-r: 90s; 


 position: relative;
 -webkit-animation: scene var(--duration-r) linear infinite;
 animation: scene var(--duration-r) linear infinite;


 * { position: absolute; }
}


@-webkit-keyframes scene {
 from { transform: rotateX(60deg) rotateZ(0deg); }
 to { transform: rotateX(60deg) rotateZ(-360deg); }
}


@keyframes scene {
 from { transform: rotateX(60deg) rotateZ(0deg); }
 to { transform: rotateX(60deg) rotateZ(-360deg); }
}


.floor {
 inset: -40em;
 background: radial-gradient(circle, rgba(24, 0, 16, 0.5) 40%, rgba(26, 0, 10, 0) 70%);
}




.canon {
 inset: -2em;
 border-radius: 50%;
 background-image: radial-gradient(closest-side, #33000d 0.5em, transparent);


 i {
 --n: calc(sibling-index() / sibling-count());


 inset: 1.5em;
 border-radius: 50%;
 border: 0.25em solid hsl(calc(var(--n) * 20 - 10) 100% calc(50% + var(--n) * 20%));
 transform: translateZ(calc(var(--n) * 3em));
 -webkit-animation: canon calc(var(--duration) / 64) calc(var(--n) * var(--duration) / 64) ease-in-out infinite;
 animation: canon calc(var(--duration) / 64) calc(var(--n) * var(--duration) / 64) ease-in-out infinite;
 }
}


@-webkit-keyframes canon {
 0%, 100% { scale: 1; filter: brightness(1); }
 40% { scale: 3; filter: brightness(2); }
}


@keyframes canon {
 0%, 100% { scale: 1; filter: brightness(1); }
 40% { scale: 3; filter: brightness(2); }
}


.hearts {
 i {
 --n: calc(sibling-index() / sibling-count());
 --sin: calc(sin(var(--n) * 90deg));
 --rnd: calc(mod(var(--sin) * 100, 1));
 --h: calc(0.5 + var(--rnd) * 0.5);
 --rnd2: calc(mod(var(--sin) * 101, 1));
 --tx: calc(var(--n) * 10em + 40em); 


 animation-composition: add;
 -webkit-animation:
 ballX var(--duration) calc(var(--n) * var(--duration)) infinite ease,
 ballCounter var(--duration-r) infinite linear,
 scaleUp var(--duration) calc(var(--n) * var(--duration)) infinite alternate; 
 animation:
 ballX var(--duration) calc(var(--n) * var(--duration)) infinite ease,
 ballCounter var(--duration-r) infinite linear,
 scaleUp var(--duration) calc(var(--n) * var(--duration)) infinite alternate; 


 &::before {
 content: '';
 position: absolute;
 inset: -1.5em;
 background-image: radial-gradient(closest-side, #0007, 0.5em, transparent);
 -webkit-animation: ballShadow var(--duration) calc(var(--n) * var(--duration)) ease-in infinite backwards;
 animation: ballShadow var(--duration) calc(var(--n) * var(--duration)) ease-in infinite backwards;
 }


 &::after {
 content: '';
 position: absolute;
 inset: -0.7em;
 background-color: hsl(calc(var(--rnd2) * 40 - 20) 100% 60%);
 background-image: radial-gradient(circle at top, #fff5, transparent 60%);
 clip-path: polygon(50% 100%, 0 45%, 15% 5%, 50% 30%, 85% 5%, 100% 45%);
 transform-origin: 50% 0%;


 -webkit-animation:
 ballColor var(--duration) calc(var(--n) * var(--duration)) ease-in infinite backwards,
 ballY var(--duration) calc(var(--n) * var(--duration)) ease-in infinite backwards;
 animation:
 ballColor var(--duration) calc(var(--n) * var(--duration)) ease-in infinite backwards,
 ballY var(--duration) calc(var(--n) * var(--duration)) ease-in infinite backwards;
 }
 }
}

@-webkit-keyframes scaleUp {
 0% { transform: scale(0.8) translateZ(0); }
 100% { transform: scale(1.2) translateZ(0); }
}


@keyframes scaleUp {
 0% { transform: scale(0.8) translateZ(0); }
 100% { transform: scale(1.2) translateZ(0); }
}

.love-text {
 position: absolute;
 font-family: 'cursive', sans-serif;
 font-size: 2rem;
 color: #ff4d4d;
 text-shadow: 0 0 10px #ff0000, 0 0 20px #ff0000;
 pointer-events: none;
 user-select: none; 
 animation: float-up 1.5s forwards;
}


@keyframes float-up {
 from {
 opacity: 1;
 transform: translate(-50%, -50%) scale(1);
 }
 to {
 opacity: 0;
 transform: translate(-50%, -150%) scale(1.5); 
 }
}


@-webkit-keyframes ballX {
 0% { transform: rotate(calc(var(--rnd2) * 360deg)) translateX(0) rotate(calc(var(--rnd2) * -360deg)); }
 50%, 100% { transform: rotate(calc(var(--rnd2) * 360deg)) translateX(var(--tx)) rotate(calc(var(--rnd2) * -360deg)); }
}


@keyframes ballX {
 0% { transform: rotate(calc(var(--rnd2) * 360deg)) translateX(0) rotate(calc(var(--rnd2) * -360deg)); }
 50%, 100% { transform: rotate(calc(var(--rnd2) * 360deg)) translateX(var(--tx)) rotate(calc(var(--rnd2) * -360deg)); }
}


@-webkit-keyframes ballCounter {
 from { transform: rotateZ(0deg); }
 to { transform: rotateZ(360deg); }
}


@keyframes ballCounter {
 from { transform: rotateZ(0deg); }
 to { transform: rotateZ(360deg); }
}


@-webkit-keyframes ballY {
 0%, 2.7%, 5%, 6.9%, 8.4%, 9.5%, 10.5%, 11.5%, 12.5%, 100% {
 transform: translateY(-0.5em) rotateX(-90deg) translateY(0em) rotateX(30deg);
 -webkit-animation-timing-function: ease-out;
 animation-timing-function: ease-out;
 }
 1.4% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -21em)) rotateX(30deg); }
 3.9% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -13em)) rotateX(30deg); }
 6% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -8em)) rotateX(30deg); }
 7.7% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -5em)) rotateX(30deg); }
 9% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -3em)) rotateX(30deg); }
 10% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -2em)) rotateX(30deg); }
 11% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -1em)) rotateX(30deg); }
 12% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -0.5em)) rotateX(30deg); }
}


@keyframes ballY {
 0%, 2.7%, 5%, 6.9%, 8.4%, 9.5%, 10.5%, 11.5%, 12.5%, 100% {
 transform: translateY(-0.5em) rotateX(-90deg) translateY(0em) rotateX(30deg);
 -webkit-animation-timing-function: ease-out;
 animation-timing-function: ease-out;
 }
 1.4% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -21em)) rotateX(30deg); }
 3.9% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -13em)) rotateX(30deg); }
 6% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -8em)) rotateX(30deg); }
 7.7% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -5em)) rotateX(30deg); }
 9% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -3em)) rotateX(30deg); }
 10% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -2em)) rotateX(30deg); }
 11% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -1em)) rotateX(30deg); }
 12% { transform: translateY(-0.5em) rotateX(-90deg) translateY(calc(var(--h) * -0.5em)) rotateX(30deg); }
}


@-webkit-keyframes ballColor {
 20%, 100% { background-color: black; }
}


@keyframes ballColor {
 20%, 100% { background-color: black; }
}


@-webkit-keyframes ballShadow {
 2.7%, 5%, 6.9%, 8.4%, 9.5%, 10.5%, 11.5%, 12.5%, 100% {
 opacity: 0.9;
 -webkit-animation-timing-function: ease-out;
 animation-timing-function: ease-out;
 }
 0% { opacity: 0; }
 1.4% { opacity: 0.1; }
 3.9% { opacity: 0.2; }
 6% { opacity: 0.3; }
 7.7% { opacity: 0.4; }
 9% { opacity: 0.5; }
 10% { opacity: 0.6; }
 11% { opacity: 0.7; }
 12% { opacity: 0.8; }
}


@keyframes ballShadow {
 2.7%, 5%, 6.9%, 8.4%, 9.5%, 10.5%, 11.5%, 12.5%, 100% {
 opacity: 0.9;
 -webkit-animation-timing-function: ease-out;
 animation-timing-function: ease-out;
 }
 0% { opacity: 0; }
 1.4% { opacity: 0.1; }
 3.9% { opacity: 0.2; }
 6% { opacity: 0.3; }
 7.7% { opacity: 0.4; }
 9% { opacity: 0.5; }
 10% { opacity: 0.6; }
 11% { opacity: 0.7; }
 12% { opacity: 0.8; }
}